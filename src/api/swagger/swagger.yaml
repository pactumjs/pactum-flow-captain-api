swagger: "2.0"
info:
  version: "1.0.0"
  title: "Pactum Flow Captain API"
basePath: "/api/flow/captain/v1"
consumes:
  - "application/json"
  - "text/html"
produces:
  - "application/json"
  - "text/html"
  - "text/plain"

securityDefinitions:
  BasicAuth:
    type: basic
  SessionAuth:
    type: apiKey
    in: header
    name: x-session-token

paths:
  /health:
    get:
      tags:
        - "HealthCheck"
      description: "check health"
      operationId: "getHealth"
      parameters: []
      responses:
        200:
          description: "Success"
          schema:
            $ref: "#/definitions/HealthResponse"
    x-swagger-router-controller: "health.controller"
  /session:
    post:
      tags:
        - "Session"
      description: "Session"
      operationId: "postSession"
      parameters: []
      security:
        - BasicAuth: []
      consumes:
        - "application/octet-stream"
      responses:
        200:
          description: "Success"
          schema:
            $ref: "#/definitions/SessionResponse"
    get:
      tags:
        - "Session"
      description: "Validate Session"
      operationId: "getUserSession"
      parameters: []
      security:
        - SessionAuth: []   
      responses:
        200:
          description: "Success"
          schema:
            $ref: "#/definitions/Session"
    x-swagger-router-controller: "session.controller"
  /users:
    post:
      tags:
        - "User"
      description: "Create User"
      operationId: "postUser"
      parameters:
        - in: "body"
          name: "user"
          description: "user to create"
          required: true
          schema:
            $ref: "#/definitions/User"
      security:
        - SessionAuth: []
      responses:
        200:
          description: "Success"
          schema:
            $ref: "#/definitions/HealthResponse"
    get:
      tags:
        - "User"
      description: "Get Users"
      operationId: "getUsers"
      parameters: []
      security:
        - SessionAuth: []   
      responses:
        200:
          description: "Success"
          schema:
            $ref: "#/definitions/HealthResponse"
    put:
      tags:
        - "User"
      description: "Update User"
      operationId: "updateUser"
      parameters:
        - in: "body"
          name: "user"
          description: "user to update"
          required: true
          schema:
            $ref: "#/definitions/User"
      security:
        - SessionAuth: []
      responses:
        200:
          description: "Success"
          schema:
            $ref: "#/definitions/HealthResponse"
    x-swagger-router-controller: "user.controller"
  /users/{username}:
    delete:
      tags:
        - "User"
      description: "Delete User"
      operationId: "deleteUser"
      parameters:
        - in: "path"
          name: "username"
          description: "username to delete"
          required: true
          type: "string"
      security:
        - SessionAuth: []
      responses:
        200:
          description: "Success"
          schema:
            $ref: "#/definitions/HealthResponse"
    x-swagger-router-controller: "user.controller"

definitions:
  HealthResponse:
    description: "Health Response"
    type: "object"
    properties:
      message:
        type: "string"
    example:
      message: "OK"
  SessionResponse:
    description: 'session response'
    type: "object"
    properties:
      username:
        type: "string"
      token:
        type: "string"
    example:
      username: "admin"
      token: "abc"
  Session:
    description: 'session'
    type: "object"
    properties:
      username:
        type: "string"
      role:
        type: "string"
    example:
      username: "admin"
      role: "admin"
  User:
    description: 'user'
    type: "object"
    properties:
      username:
        type: "string"
        minLength: 1
      password:
        type: "string"
        minLength: 1
      email:
        type: "string"
        minLength: 1
      role:
        type: "string"
        enum:
          - admin
          - scanner
          - viewer
    required:
      - "username"
    example:
      username: "admin"
      password: "admin"
      email: "admin@example.com"
      role: "admin"